<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:batch="http://www.springframework.org/schema/batch"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd">

<!-- 	<batch:job id="sampleJob">
		<batch:step id="step01">
			<batch:tasklet>
				<batch:chunk reader="cvsItemReader" writer="ipClassifierFileWriter"
					processor="itemProcesser" commit-interval="5" />
			</batch:tasklet>
		</batch:step>
	</batch:job>
 -->
 	<batch:job id="sampleJob">
    <batch:step id="simpleStep">
        <batch:tasklet>
            <batch:chunk reader="cvsItemReader" processor="itemProcesser" 
                         writer="ipClassifierFileWriter" commit-interval="10">
                <batch:streams>
                    <batch:stream ref="filteredIpFileWriter"/>
                    <batch:stream ref="unfilteredIpFileWriter"/>
                </batch:streams>
            </batch:chunk>
        </batch:tasklet>
    </batch:step>
</batch:job>
 	
	<bean id="cvsItemReader" class="org.springframework.batch.item.file.FlatFileItemReader">
		<property name="resource" value="classpath:report.csv" />
		<property name="lineMapper" ref="lineMapper" />
	</bean>

	<bean id="lineMapper"
		class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
		<property name="lineTokenizer">
			<bean
				class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
				<property name="names" value="ip" />
			</bean>
		</property>
		<property name="fieldSetMapper">
			<bean class="hello.ReportFieldSetMapper" />
		</property>
	</bean>

	<bean id="itemProcesser" class="hello.CustomItemProcessor" />

	<bean id="filteredIpFileWriter" class="org.springframework.batch.item.file.FlatFileItemWriter">
		<property name="resource" value="file:C:\Users\User\Desktop\filtered.csv" />
		<property name="lineAggregator">
			<bean
				class="org.springframework.batch.item.file.transform.PassThroughLineAggregator" />
		</property>
	</bean>

	<bean id="unfilteredIpFileWriter" class="org.springframework.batch.item.file.FlatFileItemWriter">
		<property name="resource" value="file:C:\Users\User\Desktop\unfilterd.csv" />
		<property name="lineAggregator">
			<bean
				class="org.springframework.batch.item.file.transform.PassThroughLineAggregator" />
		</property>
	</bean>

	<bean id="ipClassifierFileWriter" class="org.springframework.batch.item.support.ClassifierCompositeItemWriter">
    <property name="classifier">
        <bean class="hello.IpClassfier">
            <property name="writerMap">
                <map>
                    <entry key="true" value-ref="filteredIpFileWriter"/>
                    <entry key="false" value-ref="unfilteredIpFileWriter"/>
                </map>
            </property>
        </bean>
    </property>
</bean>
<!-- 
	<bean id="xmlItemWriter" class="org.springframework.batch.item.xml.StaxEventItemWriter">
		<property name="resource" value="file:C:\Users\User\Desktop\report.xml" />
		<property name="marshaller" ref="reportMarshaller" />
		<property name="rootTagName" value="report" />
	</bean>
 -->
	<bean id="reportMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
		<property name="classesToBeBound">
			<list>
				<value>hello.Report</value>
			</list>
		</property>
	</bean>

	<bean id="jobRepository"
		class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean">
		<property name="transactionManager" ref="transactionManager" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.batch.support.transaction.ResourcelessTransactionManager" />

	<bean class="org.springframework.batch.test.JobLauncherTestUtils" />

	<bean id="jobLauncher"
		class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository" />
	</bean>
</beans>